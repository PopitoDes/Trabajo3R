get_label(proc_data$SEP)
proc_data$PSEP <- set_label(x = proc_data$PSEP, label = "Sit. Eco. M/P que pasado")
get_label(proc_data$PSEP)
proc_data$FMSP <- set_label(x = proc_data$FMSP, label = "Sit. Eco. M/P que futuro")
get_label(proc_data$FMSP)
proc_data$SPF <- set_label(x = proc_data$SPF, label = "Sit. Eco. Personal y familiar")
get_label(proc_data$SPF)
proc_data$sexo <- set_label(x = proc_data$sexo, label = "Sexo")
proc_data$edad <- set_label(x = proc_data$edad, label = "Edad")
proc_data$val_demo <- set_label(x = proc_data$val_demo, label = "Valoración Democracia")
proc_data_2 <- subset(proc_data, select = c(proc_data$izq_der, proc_data$val_demo,proc_data$sexo, proc_data$edad,proc_data$cnf_FA))
View(proc_data)
options(scipen=999)
rm(list=ls())
load(file ="data/latinobarometro_proc.RData")
pacman::p_load(sjlabelled,
dplyr,
stargazer,
sjmisc,
summarytools,
kableExtra,
sjPlot,
corrplot,
sessioninfo,
ggplot2,
psych)
#Eliminamos datos perdidos
proc_data_original <- proc_data
dim(proc_data)
sum(is.na(proc_data))
colSums(is.na(proc_data))
proc_data <-na.omit(proc_data)
dim(proc_data)
sjmisc::descr(proc_data,
show = c("label","range","mean","sd","NA.prc","n")) %>%
kable(.,"markdown")
#Copio Etiquetas:
proc_data <-sjlabelled::copy_labels(proc_data,proc_data_original)
#No está funcionando cambiar etiquetas así que aquí va una sección con las etiquetas:
##################
proc_data$ns_demo <- set_label(x = proc_data$ns_demo,label = "Satisfacción Democracia")
get_label(proc_data$ns_demo)
proc_data$demo_auto <- set_label(x = proc_data$demo_auto,label = "Pref. Gob. Democrático/Autoritario")
get_label(proc_data$demo_auto)
proc_data$na_demo <- set_label(x = proc_data$na_demo,label = "NA: Democracia mejor sistema de Gob.")
get_label(proc_data$na_demo)
proc_data$na_nodemo <-set_label(x = proc_data$na_nodemo,label = "NA: Gob. no democrático llegara a resolver problemas")
get_label(proc_data$na_nodemo)
proc_data$na_spdemo <-set_label(x = proc_data$na_spdemo,label = "NA: Democracia permite solución problemas")
get_label(proc_data$na_spdemo)
proc_data$apoyo_gm <-set_label(x = proc_data$apoyo_gm,label = "Apoyo a gobierno militar")
get_label(proc_data$apoyo_gm)
proc_data$izq_der <-set_label(x = proc_data$izq_der, label = "Posicionamiento político izq-der")
get_label(proc_data$izq_der)
proc_data$cnf_pers <-set_label(x = proc_data$cnf_pers, label = "Confianza en personas")
get_label(proc_data$cnf_pers)
proc_data$cnf_FA <- set_label(x = proc_data$cnf_FA, label = "Confianza Fuerzas Armadas")
get_label(proc_data$cnf_FA)
proc_data$cnf_FP <- set_label(x = proc_data$cnf_FP, label = "Confianza Fuerzas Policiales")
get_label(proc_data$cnf_FP)
proc_data$cnf_PJ <- set_label(x = proc_data$cnf_PJ, label = "Confianza Poder Judicial")
get_label(proc_data$cnf_PJ)
proc_data$SEP <- set_label(x = proc_data$SEP, label = "Situación Económica País")
get_label(proc_data$SEP)
proc_data$PSEP <- set_label(x = proc_data$PSEP, label = "Sit. Eco. M/P que pasado")
get_label(proc_data$PSEP)
proc_data$FMSP <- set_label(x = proc_data$FMSP, label = "Sit. Eco. M/P que futuro")
get_label(proc_data$FMSP)
proc_data$SPF <- set_label(x = proc_data$SPF, label = "Sit. Eco. Personal y familiar")
get_label(proc_data$SPF)
proc_data$sexo <- set_label(x = proc_data$sexo, label = "Sexo")
proc_data$edad <- set_label(x = proc_data$edad, label = "Edad")
proc_data$val_demo <- set_label(x = proc_data$val_demo, label = "Valoración Democracia")
#Tabla descriptiva
view(dfSummary(proc_data, headings=FALSE, graph.col = FALSE))
M <-cor(proc_data, use="complete.obs")
M
sjPlot::tab_corr(proc_data,
triangle = "lower")
proc_data <- subset(proc_data, select = -c(na_demo, na_nodemo, na_spdemo))
sjPlot::tab_corr(proc_data,
triangle = "lower")
## Indice ponderado.
#Para realizar el índice ponderado, hay que cambiar todas las variables a numéricas.
indicadores2023 <- proc_data %>% mutate_all(~(as.numeric(.)))
# Luego, creamos una nueva variable para cada dimensión que contenga las medias de cada dimensión.
indicadores2023 = indicadores2023 %>%
rowwise() %>%
mutate(Eco = mean(c(SEP, PSEP, FMSP, SPF)),
CNF = mean(c(cnf_pers, cnf_FA, cnf_FP, cnf_PJ)),
VAL = mean(c(val_demo))) %>%
ungroup()
# El indicador quedaría así:
indicadores2023 = indicadores2023 %>%
rowwise() %>%
mutate(ISN = mean(c(Eco, CNF, VAL))) %>%
ungroup()
summary(indicadores2023$Eco)
summary(indicadores2023$CNF)
summary(indicadores2023$VAL)
indicadores2023 %>% select(ISN) %>% head(10)
indicadores2023 <- indicadores2023 %>% mutate(ISN = case_when(ISN>=0.33~"si",
ISN<0.33~"no")
)
prop.table(table(indicadores2023$ISN))*100
data2 <- proc_data %>%
select(SEP, PSEP, FMSP, SPF)
cor(data2)
psych::alpha(data2)
frq(data2)
data2$SEP <-car::recode(data2$SEP, "1=0;2=1;3=2;4=3;5=4")
data2$PSEP <-car::recode(data2$PSEP, "1=0;2=1;3=2;4=3;5=4")
data2$FMSP <-car::recode(data2$FMSP, "1=0;2=1;3=2;4=3;5=4")
data2$SPF <-car::recode(data2$SPF, "1=0;2=1;3=2;4=3;5=4")
frq(data2)
data2 <- data2 %>%
rowwise() %>%
mutate(DECO = sum(SEP, PSEP, FMSP, SPF))
summary(data2$DECO)
save(proc_data,file = "data/data2.RData)
rm(list = ls())
rm(list = ls())
rm(list = ls())
load(file ="data/data2.RData")
options(scipen=999)
rm(list=ls())
load(file ="data/latinobarometro_proc.RData")
pacman::p_load(sjlabelled,
dplyr,
stargazer,
sjmisc,
summarytools,
kableExtra,
sjPlot,
corrplot,
sessioninfo,
ggplot2,
psych)
#Eliminamos datos perdidos
proc_data_original <- proc_data
dim(proc_data)
sum(is.na(proc_data))
colSums(is.na(proc_data))
proc_data <-na.omit(proc_data)
dim(proc_data)
sjmisc::descr(proc_data,
show = c("label","range","mean","sd","NA.prc","n")) %>%
kable(.,"markdown")
#Copio Etiquetas:
proc_data <-sjlabelled::copy_labels(proc_data,proc_data_original)
#No está funcionando cambiar etiquetas así que aquí va una sección con las etiquetas:
##################
proc_data$ns_demo <- set_label(x = proc_data$ns_demo,label = "Satisfacción Democracia")
get_label(proc_data$ns_demo)
proc_data$demo_auto <- set_label(x = proc_data$demo_auto,label = "Pref. Gob. Democrático/Autoritario")
get_label(proc_data$demo_auto)
proc_data$na_demo <- set_label(x = proc_data$na_demo,label = "NA: Democracia mejor sistema de Gob.")
get_label(proc_data$na_demo)
proc_data$na_nodemo <-set_label(x = proc_data$na_nodemo,label = "NA: Gob. no democrático llegara a resolver problemas")
get_label(proc_data$na_nodemo)
proc_data$na_spdemo <-set_label(x = proc_data$na_spdemo,label = "NA: Democracia permite solución problemas")
get_label(proc_data$na_spdemo)
proc_data$apoyo_gm <-set_label(x = proc_data$apoyo_gm,label = "Apoyo a gobierno militar")
get_label(proc_data$apoyo_gm)
proc_data$izq_der <-set_label(x = proc_data$izq_der, label = "Posicionamiento político izq-der")
get_label(proc_data$izq_der)
proc_data$cnf_pers <-set_label(x = proc_data$cnf_pers, label = "Confianza en personas")
get_label(proc_data$cnf_pers)
proc_data$cnf_FA <- set_label(x = proc_data$cnf_FA, label = "Confianza Fuerzas Armadas")
get_label(proc_data$cnf_FA)
proc_data$cnf_FP <- set_label(x = proc_data$cnf_FP, label = "Confianza Fuerzas Policiales")
get_label(proc_data$cnf_FP)
proc_data$cnf_PJ <- set_label(x = proc_data$cnf_PJ, label = "Confianza Poder Judicial")
get_label(proc_data$cnf_PJ)
proc_data$SEP <- set_label(x = proc_data$SEP, label = "Situación Económica País")
get_label(proc_data$SEP)
proc_data$PSEP <- set_label(x = proc_data$PSEP, label = "Sit. Eco. M/P que pasado")
get_label(proc_data$PSEP)
proc_data$FMSP <- set_label(x = proc_data$FMSP, label = "Sit. Eco. M/P que futuro")
get_label(proc_data$FMSP)
proc_data$SPF <- set_label(x = proc_data$SPF, label = "Sit. Eco. Personal y familiar")
get_label(proc_data$SPF)
proc_data$sexo <- set_label(x = proc_data$sexo, label = "Sexo")
proc_data$edad <- set_label(x = proc_data$edad, label = "Edad")
proc_data$val_demo <- set_label(x = proc_data$val_demo, label = "Valoración Democracia")
##################
#Tabla descriptiva
view(dfSummary(proc_data, headings=FALSE, graph.col = FALSE))
#Matriz de correlación
M <-cor(proc_data, use="complete.obs")
M
#En este caso, anteriormente la variable "Idenpa" generaba problemas al ser
#una variable con valor constante, tuve que eliminarla en el archivo de preparación.
#Matriz de correlación mas estético:
sjPlot::tab_corr(proc_data,
triangle = "lower")
#Voy a descartar las variables: na_demo, na_nodemo, na_spdemo, pues con ellas hice un nuevo item
#anteriormente, para que la información de la tabla sea más accesible.
proc_data <- subset(proc_data, select = -c(na_demo, na_nodemo, na_spdemo))
sjPlot::tab_corr(proc_data,
triangle = "lower")
## Indice ponderado.
#Para realizar el índice ponderado, hay que cambiar todas las variables a numéricas.
indicadores2023 <- proc_data %>% mutate_all(~(as.numeric(.)))
# Luego, creamos una nueva variable para cada dimensión que contenga las medias de cada dimensión.
indicadores2023 = indicadores2023 %>%
rowwise() %>%
mutate(Eco = mean(c(SEP, PSEP, FMSP, SPF)),
CNF = mean(c(cnf_pers, cnf_FA, cnf_FP, cnf_PJ)),
VAL = mean(c(val_demo))) %>%
ungroup()
# El indicador quedaría así:
indicadores2023 = indicadores2023 %>%
rowwise() %>%
mutate(ISN = mean(c(Eco, CNF, VAL))) %>%
ungroup()
summary(indicadores2023$Eco)
summary(indicadores2023$CNF)
summary(indicadores2023$VAL)
#Observamos los primeros 10 casos del resultado:
indicadores2023 %>% select(ISN) %>% head(10)
indicadores2023 <- indicadores2023 %>% mutate(ISN = case_when(ISN>=0.33~"si",
ISN<0.33~"no")
)
prop.table(table(indicadores2023$ISN))*100
#Construcción de escala.
data2 <- proc_data %>%
select(SEP, PSEP, FMSP, SPF)
cor(data2)
#Alfa de Chronbach.
psych::alpha(data2)
#Recodifcamos datos para la escala:
frq(data2)
data2$SEP <-car::recode(data2$SEP, "1=0;2=1;3=2;4=3;5=4")
data2$PSEP <-car::recode(data2$PSEP, "1=0;2=1;3=2;4=3;5=4")
data2$FMSP <-car::recode(data2$FMSP, "1=0;2=1;3=2;4=3;5=4")
data2$SPF <-car::recode(data2$SPF, "1=0;2=1;3=2;4=3;5=4")
frq(data2)
data2 <- data2 %>%
rowwise() %>%
mutate(DECO = sum(SEP, PSEP, FMSP, SPF))
summary(data2$DECO)
save(proc_data,file = "data/data2.RData)
save(proc_data,file = "data/data2.RData")
save(proc_data, file = "data/data2.RData")
rm(list = ls())
load(file ="data/data2.RData")
#Cargar paquetes:
pacman::p_load(dplyr,
car, sjmisc,
sjPlot, sjlabelled,
stargazer,
kableExtra,
corrplot,
texreg,
ggplot2,
ggpubr)
#Eliminar datos perdidos
proc_data_original <- proc_data
dim(proc_data)
sum(is.na(proc_data))
colSums(is.na(proc_data))
proc_data <-na.omit(proc_data)
dim(proc_data)
View(proc_data)
proc_data$ns_demo <- set_label(x = proc_data$ns_demo,label = "Satisfacción Democracia")
get_label(proc_data$ns_demo)
proc_data$demo_auto <- set_label(x = proc_data$demo_auto,label = "Pref. Gob. Democrático/Autoritario")
get_label(proc_data$demo_auto)
proc_data$na_demo <- set_label(x = proc_data$na_demo,label = "NA: Democracia mejor sistema de Gob.")
get_label(proc_data$na_demo)
proc_data$na_nodemo <-set_label(x = proc_data$na_nodemo,label = "NA: Gob. no democrático llegara a resolver problemas")
get_label(proc_data$na_nodemo)
proc_data$na_spdemo <-set_label(x = proc_data$na_spdemo,label = "NA: Democracia permite solución problemas")
get_label(proc_data$na_spdemo)
proc_data$apoyo_gm <-set_label(x = proc_data$apoyo_gm,label = "Apoyo a gobierno militar")
get_label(proc_data$apoyo_gm)
proc_data$izq_der <-set_label(x = proc_data$izq_der, label = "Posicionamiento político izq-der")
get_label(proc_data$izq_der)
proc_data$cnf_pers <-set_label(x = proc_data$cnf_pers, label = "Confianza en personas")
get_label(proc_data$cnf_pers)
proc_data$cnf_FA <- set_label(x = proc_data$cnf_FA, label = "Confianza Fuerzas Armadas")
get_label(proc_data$cnf_FA)
proc_data$cnf_FP <- set_label(x = proc_data$cnf_FP, label = "Confianza Fuerzas Policiales")
get_label(proc_data$cnf_FP)
proc_data$cnf_PJ <- set_label(x = proc_data$cnf_PJ, label = "Confianza Poder Judicial")
get_label(proc_data$cnf_PJ)
proc_data$SEP <- set_label(x = proc_data$SEP, label = "Situación Económica País")
get_label(proc_data$SEP)
proc_data$PSEP <- set_label(x = proc_data$PSEP, label = "Sit. Eco. M/P que pasado")
get_label(proc_data$PSEP)
proc_data$FMSP <- set_label(x = proc_data$FMSP, label = "Sit. Eco. M/P que futuro")
get_label(proc_data$FMSP)
proc_data$SPF <- set_label(x = proc_data$SPF, label = "Sit. Eco. Personal y familiar")
get_label(proc_data$SPF)
proc_data$sexo <- set_label(x = proc_data$sexo, label = "Sexo")
proc_data$edad <- set_label(x = proc_data$edad, label = "Edad")
proc_data$val_demo <- set_label(x = proc_data$val_demo, label = "Valoración Democracia")
View(proc_data)
View(proc_data)
proc_data_2 <- subset(proc_data, select = c(proc_data$izq_der, proc_data$val_demo,proc_data$sexo, proc_data$edad,proc_data$cnf_FA))
proc_data_2 <- subset(proc_data, select = c("proc_data$izq_der", "proc_data$val_demo","proc_data$sexo", "proc_data$edad","proc_data$cnf_FA"))
proc_data_2 <- subset(proc_data, select = c("izq_der", "val_demo","sexo", "edad","cnf_FA"))
rm(list = ls())
load(file ="data/data2.RData")
#Cargar paquetes:
pacman::p_load(dplyr,
car, sjmisc,
sjPlot, sjlabelled,
stargazer,
kableExtra,
corrplot,
texreg,
ggplot2,
ggpubr)
#Eliminar datos perdidos
proc_data_original <- proc_data
dim(proc_data)
sum(is.na(proc_data))
colSums(is.na(proc_data))
proc_data <-na.omit(proc_data)
dim(proc_data)
load(file ="data/data2.RData")
rm(list = ls())
load(file ="data/data2.RData")
#Cargar paquetes:
pacman::p_load(dplyr,
car, sjmisc,
sjPlot, sjlabelled,
stargazer,
kableExtra,
corrplot,
texreg,
ggplot2,
ggpubr)
#Eliminar datos perdidos
proc_data_original <- proc_data
dim(proc_data)
sum(is.na(proc_data))
colSums(is.na(proc_data))
proc_data <-na.omit(proc_data)
dim(proc_data)
#Código no está funcionando para copiar etiquetas, pues la BBDD no se está guardando con ellas
#asi que aquí va una sección con el cambio de etiquetas:
####################
proc_data$ns_demo <- set_label(x = proc_data$ns_demo,label = "Satisfacción Democracia")
get_label(proc_data$ns_demo)
proc_data$demo_auto <- set_label(x = proc_data$demo_auto,label = "Pref. Gob. Democrático/Autoritario")
get_label(proc_data$demo_auto)
proc_data$na_demo <- set_label(x = proc_data$na_demo,label = "NA: Democracia mejor sistema de Gob.")
get_label(proc_data$na_demo)
proc_data$na_nodemo <-set_label(x = proc_data$na_nodemo,label = "NA: Gob. no democrático llegara a resolver problemas")
get_label(proc_data$na_nodemo)
proc_data$na_spdemo <-set_label(x = proc_data$na_spdemo,label = "NA: Democracia permite solución problemas")
get_label(proc_data$na_spdemo)
proc_data$apoyo_gm <-set_label(x = proc_data$apoyo_gm,label = "Apoyo a gobierno militar")
get_label(proc_data$apoyo_gm)
proc_data$izq_der <-set_label(x = proc_data$izq_der, label = "Posicionamiento político izq-der")
get_label(proc_data$izq_der)
proc_data$cnf_pers <-set_label(x = proc_data$cnf_pers, label = "Confianza en personas")
get_label(proc_data$cnf_pers)
proc_data$cnf_FA <- set_label(x = proc_data$cnf_FA, label = "Confianza Fuerzas Armadas")
get_label(proc_data$cnf_FA)
proc_data$cnf_FP <- set_label(x = proc_data$cnf_FP, label = "Confianza Fuerzas Policiales")
get_label(proc_data$cnf_FP)
proc_data$cnf_PJ <- set_label(x = proc_data$cnf_PJ, label = "Confianza Poder Judicial")
get_label(proc_data$cnf_PJ)
proc_data$SEP <- set_label(x = proc_data$SEP, label = "Situación Económica País")
get_label(proc_data$SEP)
proc_data$PSEP <- set_label(x = proc_data$PSEP, label = "Sit. Eco. M/P que pasado")
get_label(proc_data$PSEP)
proc_data$FMSP <- set_label(x = proc_data$FMSP, label = "Sit. Eco. M/P que futuro")
get_label(proc_data$FMSP)
proc_data$SPF <- set_label(x = proc_data$SPF, label = "Sit. Eco. Personal y familiar")
get_label(proc_data$SPF)
proc_data$sexo <- set_label(x = proc_data$sexo, label = "Sexo")
proc_data$edad <- set_label(x = proc_data$edad, label = "Edad")
proc_data$val_demo <- set_label(x = proc_data$val_demo, label = "Valoración Democracia")
proc_data_2 <- subset(proc_data, select = c("izq_der", "val_demo","sexo", "edad","cnf_FA"))
graph1 <- ggplot(proc_data2, aes (x = edad, y = val_demo)) +
geom_point(size = 1) +
geom_smooth(method = "lm", se = False) +
labs(x = "Edad", y = "Valoración Democracia")
graph1 <- ggplot(proc_data_2, aes (x = edad, y = val_demo)) +
geom_point(size = 1) +
geom_smooth(method = "lm", se = False) +
labs(x = "Edad", y = "Valoración Democracia")
graph1 <- ggplot(proc_data_2, aes (x = edad, y = val_demo)) +
geom_point(size = 1) +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Edad", y = "Valoración Democracia")
graph1
reg1 <- lm(val_demo ~ 1, data = proc_data_2)
stargazer(reg1, type="text")
reg2 <- lm(val_demo ~ edad, data=proc_data_2)
reg3 <- lm(val_demo ~ sexo, data=proc_data_2)
rag4 <- lm(val_demo ~ izq_der, data=proc_data_2)
knitreg(list(reg2, reg3, reg4),
custo.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names = c("Intercepto",
"Edad",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Posición política desde izq a der"),
caption = "Valoración democracia",
caption.above = TRUE)
reg2 <- lm(val_demo ~ edad, data=proc_data_2)
reg3 <- lm(val_demo ~ sexo, data=proc_data_2)
reg4 <- lm(val_demo ~ izq_der, data=proc_data_2)
knitreg(list(reg2, reg3, reg4),
custo.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names = c("Intercepto",
"Edad",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Posición política desde izq a der"),
caption = "Valoración democracia",
caption.above = TRUE)
ggeffects::ggpredict(reg2, terms = c("edad")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Edad", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1),
labels = c("Edad"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
ggeffects::ggpredict(fit04, terms = c("sexo")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Sexo", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1),
labels = c("Hombre", "Mujer"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
ggeffects::ggpredict(reg3, terms = c("sexo")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Sexo", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1),
labels = c("Hombre", "Mujer"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
ggeffects::ggpredict(reg4, terms = c("izq_der")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Posición política", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
labels = c("1", "2","3","4","5","6","7","8","9","10"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
ggeffects::ggpredict(reg4, terms = c("izq_der")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Posición política", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1,2,3,4,5,6,7,8,9,10)
labels = c("1", "2","3","4","5","6","7","8","9","10"))+
ggeffects::ggpredict(reg4, terms = c("izq_der")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Posición política", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1,2,3,4,5,6,7,8,9,10),
labels = c("1", "2","3","4","5","6","7","8","9","10"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
ggeffects::ggpredict(reg4, terms = c("izq_der")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Posición política", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(1,2,3,4,5,6,7,8,9,10),
labels = c("1", "2","3","4","5","6","7","8","9","10"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
ggeffects::ggpredict(reg4, terms = c("izq_der")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Posición política", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1,2,3,4,5,6,7,8,9,10),
labels = c("0","1", "2","3","4","5","6","7","8","9","10"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
knitreg(list(reg4)),
knitreg(list(reg4),
custom.model.names = c("Modelo 1"),
custom.coef.names = c("Intercepto",
"Posición política"))
